from pptx import Presentation
from pptx.util import Inches, Pt
import os

def create_summary_ppt(summary_text: str, original_filename: str, output_dir: str) -> str:
    """
    Creates a simple PowerPoint presentation with the summary text.

    Args:
        summary_text: The summarized text to include in the PPT.
        original_filename: The name of the original uploaded file (for title).
        output_dir: The directory where the generated PPT should be saved.

    Returns:
        The full path to the generated PPT file.

    Raises:
        Exception: If PPT generation fails.
    """
    prs = Presentation()

    # --- Slide 1: Title Slide ---
    title_slide_layout = prs.slide_layouts[0] # Use the default title slide layout
    slide = prs.slides.add_slide(title_slide_layout)
    title = slide.shapes.title
    subtitle = slide.placeholders[1] # Subtitle placeholder

    title.text = f"Summary of: {original_filename}"
    subtitle.text = "Generated by GMDC PPT Summary Maker"

    # --- Slide 2: Summary Content Slide ---
    content_slide_layout = prs.slide_layouts[1] # Use title and content layout
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content_box = slide.placeholders[1] # Body content placeholder

    title.text = "Summary"

    # Add summary text to the content box
    tf = content_box.text_frame
    tf.text = summary_text
    tf.word_wrap = True # Ensure text wraps within the box
    # Optional: Adjust font size if needed
    # for paragraph in tf.paragraphs:
    #     paragraph.font.size = Pt(14)

    # --- Save the Presentation ---
    # Create a safe filename for the output PPT
    base_name, _ = os.path.splitext(original_filename)
    safe_base_name = "".join(c if c.isalnum() or c in (' ', '.', '-') else '_' for c in base_name) # Basic sanitization
    output_filename = f"Summary_{safe_base_name}.pptx"
    output_filepath = os.path.join(output_dir, output_filename)

    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    try:
        prs.save(output_filepath)
        return output_filepath
    except Exception as e:
        print(f"Error saving presentation {output_filepath}: {e}")
        raise Exception("Failed to create PowerPoint presentation.") from e